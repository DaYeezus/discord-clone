version: '3.8'
services:
    dev:
      container_name: nestjs_api_dev
      image: nestjs-api-dev:1.0.0
      build:
          context: .
          target: development
          dockerfile: ./Dockerfile
      command: npm run start:debug
      environment :
        DATABASE_URL: postgresql:admin:admin@postgres/discord
      ports:
          - "50000:3000"
          - "9229:9229"
      networks:
          - discord_network
      volumes:
          - .:/usr/src/app
          - /usr/src/app/node_modules
      depends_on:
        - elastic-search
        - postgres
        - redis
      restart: unless-stopped
#    prod:
#      container_name: nestjs_api_prod
#      image: nestjs-api-prod:1.0.0
#      build:
#          context: .
#          target: production
#          dockerfile: ./Dockerfile
#      command: yarn run start:prod
#      ports:
#          - "3000:3000"
#          - "9229:9229"
#      networks:
#          - discord_network
#      volumes:
#          - .:/usr/src/app
#          - /usr/src/app/node_modules
#      restart: unless-stopped
    postgres:
      image: postgres
      container_name: postgres
      restart: always
      networks:
        - discord_network
      ports:
        - "5432:5432"
      environment:
        POSTGRES_USER: admin
        POSTGRES_PASSWORD: admin
      volumes:
        - postgres:/var/lib/postgresql/data
    pgadmin:
      image: dpage/pgadmin4
      container_name: pgadmin4_container
      restart: always
      ports:
        - "5050:80"
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@gmail.com
        PGADMIN_DEFAULT_PASSWORD: admin
      volumes:
        - pgadmin-data:/var/lib/pgadmin
      networks:
        - discord_network
      depends_on:
        - postgres
      command:
        - CREATE DB Blog_App
    redis:
      image: redis:alpine
      command:
        - redis-server
      ports:
        - "6379:6379"
      container_name: redis
      networks:
        - discord_network
      volumes:
        - redis-data:/data
        - redis-conf:/usr/local/etc/redis/redis.conf
    elastic-search:
      image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
      container_name: es-container
      environment:
        - node.name=es-container
        - cluster.name=es-docker-cluster
        - discovery.type=single-node
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - xpack.security.enabled=false
      ulimits:
        memlock:
          soft: -1
          hard: -1
      volumes:
        - elastic-data:/usr/share/elasticsearch/data
      ports:
        - "9200:9200"
      networks:
        - discord_network
    kibana:
      container_name: kb-container
      image: docker.elastic.co/kibana/kibana:8.5.3
      environment:
        - ELASTICSEARCH_HOSTS=http://es-container:9200
      networks:
        - discord_network
      depends_on:
        - elastic-search
      ports:
        - "5601:5601"
volumes:
  postgres:
  pgadmin-data:
  redis-data:
  redis-conf:
  elastic-data:
    driver: local
networks:
    discord_network: